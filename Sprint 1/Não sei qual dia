

AULA 2

Manifesto Ágil


Possui 12 princípios:

	• Satisfação do cliente: A maior prioridade está em  satisfazer o cliente por meio da entrega adiantada e  contínua de software de valor.
	
	• Mudança em favor da vantagem competitiva:  Mudanças de requisitos são bem-vindas, mesmo em  fases tardias do desenvolvimento.
	
	• Prazos curtos: Entregar software em funcionamento com  frequência, desde a cada duas semanas até a cada dois  meses, com uma preferência por prazos mais curtos.
	
	• Trabalho em conjunto: Tanto pessoas relacionadas a  negócios como desenvolvedores devem trabalhar em  conjunto, diariamente, durante todo o curso do projeto.
	
	• Ambientação e suporte: Para construir projetos ao  redor de indivíduos motivados, é preciso dar a eles o  ambiente e o suporte necessários, confiando que farão  seu trabalho.
	
	• Conversa presencial: O método mais eficiente de  transmitir informações tanto externas como internas para  um time de desenvolvimento é por meio de uma  conversa cara a cara.
	
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	 
	
	• Funcionalidade: Um software funcional é a medida  primária de progresso.

	• Ambiente de sustentabilidade: Processos ágeis promovem um ambiente sustentável, com patrocinadores, desenvolvedores e usuários sendo capazes de manter passos constantes.
	
	• Padrões altos de tecnologia e design: A contínua atenção à excelência técnica e ao bom design aumenta a agilidade.
	
	• Simplicidade: Fazer algo simples é dominar a arte de maximizar a quantidade de trabalho que não precisou ser feito.
	
	• Autonomia: As melhores arquiteturas, os requisitos e os designs emergem de times auto organizáveis.
	
	• Reflexões para otimizações: Em intervalos regulares, o time reflete em como ficar mais efetivo, então, se ajustam e otimizam seu comportamento de acordo.


Valores:
	• Valor ágil I – Indivíduos e interações acima de processos e ferramentas
	• Valor ágil II – Software funcionando é melhor que documentação abrangente
	• Valor ágil III – Colaboração com o cliente acima de negociação de contratos
	• Valor ágil IV – Responder a mudanças ao invés de seguir um plano

AULA 3


O QA dentro de um time ágil


QA, do inglês Quality Assurance (Garantia de Qualidade), é um termo muito disseminado dentro do desenvolvimento de software, e o seu principal objetivo é garantir que o produto final seja entregue com a qualidade esperada.

O QA integra o time de desenvolvimento, porém, sendo um profissional com maior habilidade em planejar, desenvolver e executar testes.

O que se ganha com um QA em time ágil?

	• Entregas com maior valor agregado;
	• Otimização do tempo;
	• Maior evangelização das práticas de qualidade durante todo projeto;
	• Menor número de incidentes críticos na reta final do produto;
	• Redução de custo pela antecipação dos bugs encontrados durante o projeto;
	• Incentivo em melhorar o processo continuamente.

AULA 3


Principais tipos de métodos ágeis

Com sua origem datada em meados dos anos 1990, o conceito de Agile não demorou a ser difundido entre os especialistas, o que resultou na criação de diferentes modelos que dão suporte à gestão de projetos. A razão pela qual sugiram os métodos ágeis é fazer frente aos modelos tradicionais, apontados como lentos e burocráticos, com o objetivo de reduzir o ciclo de desenvolvimento em semanas ou meses — nos modelos “conservadores”, esse ciclo pode durar anos.

Portanto, partindo do princípio de que os projetos têm início e fim definidos, e que eles são planejados e desenvolvidos em etapas, algumas das principais características — além da agilidade — dos métodos ágeis são:

Principais características
	• processo incremental (quase uma antítese do tradicional modelo de cascata);
	• colaboração do cliente;
	• adaptabilidade (cada projeto está sujeito a passar por várias modificações);
	• simplicidade;
	• feedback constante;
	• equipes pequenas (mas com alto nível técnico) etc.

Vantagens dos métodos ágeis para os clientes:
	• Agilidade
	• Múltiplas entregas
	• Participação do cliente no projeto
	• Customização do produto de acordo com sua preferência


Vantagens dos métodos ágeis para a equipe:
	• Entregas rápidas e frequentes
	• Qualidade do produto
	• Previsão de cronograma e custos
	• Mitigação de riscos

Principais Métodos Ágeis

Feature Driven Development (FDD) 
A sua premissa básica tem o foco em funcionalidades, o que permite à equipe do projeto fazer um planejamento incremental, isto é, por fases.

EXtreme Programming (XP) 
Foco no desenvolvimento de softwares com base em três pilares: agilidade no desenvolvimento da solução, economia de recursos e qualidade do produto final.

Microsoft Solutions Framework (MSF) 
Se destina ao desenvolvimento de soluções tecnológicas por equipes reduzidas, com foco na diminuição de riscos para o negócio e no aumento da qualidade do produto final.
O propósito é identificar as falhas mais comuns em projetos de tecnologia, mitigando-as e aumentando as taxas de sucesso de cada iniciativa.

Dynamic System Development Model (DSDM) 
É destinado ao desenvolvimento de projetos com orçamento fixo e prazos curtos, considerando que o cliente não tem como saber quanto custará a solução final.

Scrum 
Tem como base o planejamento iterativo e incremental, que se dá, conforme já explicado, pelas reuniões conhecidas como Sprints 

Lean 
Valida hipóteses e ideias referentes ao desenvolvimento de produtos e soluções, além de fazer a identificação e a eliminação dos desperdícios na execução de projetos.

Kanban 
Visibilidade das tarefas feitas pelas equipes responsáveis pelos projetos. É uma excelente opção para os profissionais que trabalham com checklists, visto que é fácil de aplicar e bastante simples, com foco em fluxos de trabalho. O método divide as tarefas em 3 etapas ou cartões:
	• to do ou tarefas a serem feitas;
	• doing ou o que já é feito;
	• done ou aquelas que já foram entregues e finalizadas.


Scaled Agile Framework (SAFe) 
Ajuda a gerenciar, de maneira eficaz, os projetos quando as corporações precisam aprimorar suas ofertas para os clientes e melhorar a sua posição no mercado. 

Smart 
S (specific) 
M (mensurable) 
A (atttainable) 
R (relevant) 
T (time-related)

A pirâmide de testes

Qual a função da pirâmide de testes? Define níveis de testes, e guia a pessoa a saber a quantidade de testes que deveria ter em cada um desses níveis.




Valores:
	• Valor ágil I – Indivíduos e interações acima de processos e ferramentas
	• Valor ágil II – Software funcionando é melhor que documentação abrangente
	• Valor ágil III – Colaboração com o cliente acima de negociação de contratos
	• Valor ágil IV – Responder a mudanças ao invés de seguir um plano
